import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Character, GetCharacters } from "../types";
import imageLoader from "../ImageLoader";
import Link from "next/link";
import Layout from "../components/Layout";
import { useGetCharactersQuery,  useGetPokemonsQuery } from '../redux/slices/characterSlice';

function Home() {
  // const characters = useAppSelector((state) => state.character.characters)
  // const dispatch = useDispatch();
  // const { data, error, isLoading } = useGetCharactersQuery([]);
  const {data, error, isLoading} =  useGetPokemonsQuery([])

  return (
    <div className="flex h-screen w-full">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex overflow-x-hidden pb-10 mb-2">
        <div className="flex mx-auto flex-wrap">
          {data?.results.map((char: Character) => (
            <div
              key={char.id}
              className="flex flex-col m-4 lg:w-2/12 bg-green-100 p-4"
            >
              <Image
                loader={imageLoader}
                unoptimized
                src={char.image}
                width={100}
                height={200}
                alt={char.name}
              />
              <p> Name: {char.name}</p>
              <Link href={`/character/${char.id}`}>
                <button className="bg-green-900 text-white p-2 rounded-lg">
                  More
                </button>
              </Link>
            </div>
          ))}
        </div>
      </main>
    </div>
  );
}

Home.getLayout = function getLayout(page: typeof Home) {
  return <Layout>{page}</Layout>;
};

export const getStaticProps: GetStaticProps = async (context) => {
  const res = await fetch("https://rickandmortyapi.com/api/character");

  const { results }: GetCharacters = await res.json();

  console.log(results);

  return {
    props: {
      characters: results,
    },
  };
};

export default Home;
